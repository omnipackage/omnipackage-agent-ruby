#!/usr/bin/env ruby
# frozen_string_literal: true

$LOAD_PATH.unshift ::File.expand_path('../lib', __dir__)

begin
  require 'super_awesome_print'
rescue ::LoadError
end

require 'optparse'

require 'omnipackage_agent'

options = {}
optparser = ::OptionParser.new do |parser|
  parser.banner = "Usage: #{$PROGRAM_NAME} [options]"

  parser.on('-v', '--version', 'show version') do
    puts ::OmnipackageAgent::VERSION
    exit
  end
  parser.on('-h', '--help', 'show help info') do
    puts parser
    exit
  end
  parser.on('-b', '--build SOURCE_PATH', 'path to source code that you want to build')
  parser.on('-c', '--config CONFIG_FILE', 'path to config file')
end
optparser.parse!(into: options)

# pp options
# Dir.chdir(__dir__)

begin
  config = ::OmnipackageAgent::Config.get(options)
  ::OmnipackageAgent.check_system_packages!

  unless options[:build]
    warn 'source path required in headless'
    warn optparser
    exit(1)
  end
  results = ::OmnipackageAgent::Build.new(logger: ::OmnipackageAgent::Logging::Logger.new, config: config).call(options[:build])

  puts 'Build complete'
  puts "\n"
  results.each do |o|
    puts o.distro.name
    if o.success
      puts 'Success, artefacts:'
      o.artefacts.each do |a|
        puts a
      end
    else
      puts "Error, log: #{o.build_log}"
    end
    puts "\n"
  end
rescue ::StandardError => e
  warn "#{e.class}: #{e.message}"
  warn e.backtrace
  warn ''
  warn optparser
  exit(1)
end
