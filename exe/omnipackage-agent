#!/usr/bin/env ruby
# frozen_string_literal: true

$LOAD_PATH.unshift ::File.expand_path('../lib', __dir__)

begin
  require 'super_awesome_print'
rescue ::LoadError
end

require 'optparse'

require 'omnipackage_agent'

options = {}
optparser = ::OptionParser.new do |parser|
  parser.banner = "Usage: #{$PROGRAM_NAME} [options]"

  parser.on('-v', '--version', 'show version') do
    puts ::OmnipackageAgent::VERSION
    exit
  end
  parser.on('-h', '--help', 'show help info') do
    puts parser
    exit
  end
  parser.on('--print-default-config', 'print to stdout the default config file content that you can use as a starting point') do
    puts ::File.read(::OmnipackageAgent::Config::DEFAULT_LOCATION)
    exit
  end
  parser.on('-c', '--config CONFIG_FILE', 'path to config file')
end
optparser.parse!(into: options)

# pp options
# Dir.chdir(__dir__)

# ::Signal.trap('HUP') do
#   warn 'caught SIGHUP'
# end

begin
  ::OmnipackageAgent.check_system_packages!
  config = ::OmnipackageAgent::Config.get(options[:config])
  if config.apihost.empty?
    warn 'you have to specify apihost in the config file'
    exit(2)
  end
  if config.apikey.empty?
    warn 'you have to specify apikey in the config file'
    exit(2)
  end

  ::OmnipackageAgent.run(config)
rescue ::StandardError => e
  warn "#{e.class}: #{e.message}"
  warn e.backtrace
  exit(1)
rescue ::Interrupt
  warn 'quitting...'
  exit(0)
end
