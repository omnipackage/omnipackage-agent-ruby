#!/usr/bin/env ruby
# frozen_string_literal: true

$LOAD_PATH.unshift ::File.expand_path('../lib', __dir__)

begin
  require 'super_awesome_print'
rescue ::LoadError
end

require 'optparse'

require 'omnipackage_agent'

options = {}
optparser = ::OptionParser.new do |parser|
  parser.banner = "Usage: #{$PROGRAM_NAME} [options]"

  parser.on('--version', 'show version') do
    puts ::OmnipackageAgent::VERSION
    exit
  end
  parser.on('--help', 'show help info') do
    puts parser
    exit
  end
  parser.on('--show-default-config', 'show default config file location') do
    puts ::OmnipackageAgent::Config::DEFAULT_LOCATION
    exit
  end
  parser.on('--[no-]headless', 'run agent without cloud connection')
  parser.on('--source SOURCE_PATH', 'path to source code in headless mode')
  parser.on('--apihost API_HOST', 'cloud api host url')
  parser.on('--apikey API_KEY', 'cloud api key')
  parser.on('--config CONFIG_FILE', 'path to config file')
end
optparser.parse!(into: options)

# pp options
# Dir.chdir(__dir__)

begin
  config = ::OmnipackageAgent::Config.get(options)
  ::OmnipackageAgent.check_system_packages!

  if options[:headless]
    unless options[:source]
      warn 'source path required in headless'
      warn optparser
      exit(1)
    end
    results = ::OmnipackageAgent.headless(config, options[:source])
    puts 'Build complete'
    puts "\n"
    results.each do |o|
      puts o.distro.name
      if o.success
        puts 'Success, artefacts:'
        o.artefacts.each do |a|
          puts a
        end
      else
        puts "Error, log: #{o.build_log}"
      end
      puts "\n"
    end
  else
    ::OmnipackageAgent.api(config)
  end
rescue ::StandardError => e
  warn "#{e.class}: #{e.message}"
  warn e.backtrace
  warn ''
  warn optparser
  exit(1)
end
